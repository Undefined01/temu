/*
 * This source file was generated by the Gradle 'init' task
 */
package website.lihan.temu;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;

import website.lihan.temu.cpu.Riscv64BytecodeNode;
import website.lihan.temu.cpu.Riscv64BytecodeRootNode;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        var memory = new Memory();
        memory.loadFromFile("/home/lh/src/temu/am-kernels/tests/am-tests/build/amtest-riscv64-nemu.bin");
        var bus = new Bus(new Region[] { memory, new SerialPort() });
        var cpu = new Riscv64BytecodeNode(bus);
        var cpuRootNode = new Riscv64BytecodeRootNode(cpu);
        cpuRootNode.getCallTarget().call();

        for (int i = 0; i < 32; i++) {
            // System.out.printf("x%d = %x\n", i, cpu.register[i]);
        }
        try {
            var expected = Files.readAllLines(Path.of("/home/lh/src/temu/app/src/test/asm/instr-test/expect/branch.txt"));
            for (int i = 0; i < 32; i++) {
                if (cpu.register[i] != Long.parseUnsignedLong(expected.get(i), 16)) {
                    // System.err.printf("Mismatch at x%d: expected %x, got %x\n", i, Long.parseLong(expected.get(i), 16), cpu.register[i]);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
